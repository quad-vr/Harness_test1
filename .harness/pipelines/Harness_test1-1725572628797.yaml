pipeline:
  identifier: Build_Harness_test1_1725572633014
  name: Build Harness_test1
  orgIdentifier: default
  projectIdentifier: Test
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.vrquad
        repoName: Harness_test1
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: echo
                  name: echo
                  spec:
                    shell: Sh
                    command: |-
                      command: |-
                        set -e;

                        - step:
                          type: Run
                          name: Run pytest
                          identifier: Run_pytest
                          spec:
                            connectorRef: account.harnessImage
                            image: python:latest
                            shell: Sh
                            command: |-
                              echo "Welcome to Harness CI"
                              uname -a
                              
                              # Install project dependencies
                              pip install -r requirements.txt

                              # Install pytest and coverage tools
                              pip install pytest pytest-cov

                              # Run pytest with coverage and generate JUnit XML report
                              pytest -v --cov --junitxml="result.xml" test_api.py test_api_2.py test_api_3.py

                              echo "Done"
                            reports:
                              type: JUnit
                              spec:
                                paths:
                                  - "result.xml"  # Or use "**/*.xml" if expecting multiple reports
                  timeout: ""
                  type: Run
              - step:
                  type: Run
                  name: Run_2
                  identifier: Run_2
                  spec:
                    shell: Sh
                    command: |-
                      pip install nox
                      pip install flake8
                      python noxfile.py
                      nox -f noxfile.py
              - step:
                  type: RunTests
                  name: RunTests_1
                  identifier: RunTests_1
                  spec:
                    language: Python
                    buildTool: Pytest
                    runOnlySelectedTests: true
                    enableTestSplitting: false
          platform:
            os: Windows
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
